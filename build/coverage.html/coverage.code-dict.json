{"/home/travis/build/npmtest/node-npmtest-hard-source-webpack-plugin/test.js":"/* istanbul instrument in package npmtest_hard_source_webpack_plugin */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireExampleJsFromReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-hard-source-webpack-plugin/lib.npmtest_hard_source_webpack_plugin.js":"/* istanbul instrument in package npmtest_hard_source_webpack_plugin */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_hard_source_webpack_plugin = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_hard_source_webpack_plugin = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-hard-source-webpack-plugin/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-hard-source-webpack-plugin && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_hard_source_webpack_plugin */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_hard_source_webpack_plugin\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_hard_source_webpack_plugin.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_hard_source_webpack_plugin.rollup.js'] =\n            local.assetsDict['/assets.npmtest_hard_source_webpack_plugin.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_hard_source_webpack_plugin.__dirname + '/lib.npmtest_hard_source_webpack_plugin.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-hard-source-webpack-plugin/node_modules/hard-source-webpack-plugin/index.js":"var crypto = require('crypto');\nvar fs = require('fs');\nvar path = require('path');\n\nvar level = require('level');\nvar lodash = require('lodash');\nvar mkdirp = require('mkdirp');\n\nvar Promise = require('bluebird');\n\nvar envHash = require('./lib/env-hash');\n// try {\n//   envHash = require('env-hash');\n//   envHash = envHash.default || envHash;\n// }\n// catch (_) {\n//   envHash = function() {\n//     return Promise.resolve('');\n//   };\n// }\n\nvar AMDDefineDependency = require('webpack/lib/dependencies/AMDDefineDependency');\nvar AMDRequireContextDependency = require('webpack/lib/dependencies/AMDRequireContextDependency');\nvar AsyncDependenciesBlock = require('webpack/lib/AsyncDependenciesBlock');\nvar CommonJsRequireContextDependency = require('webpack/lib/dependencies/CommonJsRequireContextDependency');\nvar ConstDependency = require('webpack/lib/dependencies/ConstDependency');\nvar ContextDependency = require('webpack/lib/dependencies/ContextDependency');\nvar RequireContextDependency = require('webpack/lib/dependencies/RequireContextDependency');\nvar RequireResolveContextDependency = require('webpack/lib/dependencies/RequireResolveContextDependency');\nvar SingleEntryDependency = require('webpack/lib/dependencies/SingleEntryDependency');\n\nvar ContextModule = require('webpack/lib/ContextModule');\nvar NormalModule = require('webpack/lib/NormalModule');\ntry{\n  var NullDependencyTemplate = require('webpack/lib/dependencies/NullDependencyTemplate');\n} catch(ex) {\n  var NullDependencyTemplate = require('webpack/lib/dependencies/NullDependency').Template;\n}\nvar NullFactory = require('webpack/lib/NullFactory');\n\nvar HarmonyCompatibilityDependency;\nvar HarmonyExportImportedSpecifierDependency;\nvar HarmonyImportDependency;\nvar HarmonyImportSpecifierDependency;\nvar ImportContextDependency;\n\ntry {\n  HarmonyExportImportedSpecifierDependency = require('webpack/lib/dependencies/HarmonyExportImportedSpecifierDependency');\n  HarmonyImportDependency = require('webpack/lib/dependencies/HarmonyImportDependency');\n  HarmonyImportSpecifierDependency = require('webpack/lib/dependencies/HarmonyImportSpecifierDependency');\n  ImportContextDependency = require('webpack/lib/dependencies/ImportContextDependency');\n\n  try {\n    HarmonyCompatibilityDependency = require('webpack/lib/dependencies/HarmonyCompatibilityDependency');\n  }\n  catch (_) {\n    HarmonyCompatibilityDependency = require('webpack/lib/dependencies/HarmonyCompatiblilityDependency');\n  }\n}\ncatch (_) {\n  HarmonyCompatibilityDependency = function() {};\n}\n\nvar HardModuleDependency = require('./lib/dependencies').HardModuleDependency;\nvar HardContextDependency = require('./lib/dependencies').HardContextDependency;\nvar HardNullDependency = require('./lib/dependencies').HardNullDependency;\nvar HardHarmonyExportDependency = require('./lib/dependencies').HardHarmonyExportDependency;\nvar HardHarmonyImportDependency =\nrequire('./lib/dependencies').HardHarmonyImportDependency;\nvar HardHarmonyImportSpecifierDependency =\nrequire('./lib/dependencies').HardHarmonyImportSpecifierDependency;\nvar HardHarmonyExportImportedSpecifierDependency = require('./lib/dependencies').HardHarmonyExportImportedSpecifierDependency;\nvar HardHarmonyCompatibilityDependency = require('./lib/dependencies').HardHarmonyCompatibilityDependency;\n\nvar FileSerializer = require('./lib/cache-serializers').FileSerializer;\nvar LevelDbSerializer = require('./lib/cache-serializers').LevelDbSerializer;\n\nvar HardContextModule = require('./lib/hard-context-module');\nvar HardContextModuleFactory = require('./lib/hard-context-module-factory');\nvar HardModule = require('./lib/hard-module');\n\nvar makeDevtoolOptions = require('./lib/devtool-options');\nvar cachePrefix = require('./lib/util').cachePrefix;\nvar deserializeDependencies = require('./lib/deserialize-dependencies');\n\nvar hardSourceVersion = require('./package.json').version;\n\nfunction requestHash(request) {\n  return crypto.createHash('sha1').update(request).digest().hexSlice();\n}\n\nvar fsReadFile = Promise.promisify(fs.readFile, {context: fs});\nvar fsWriteFile = Promise.promisify(fs.writeFile, {context: fs});\n\nvar NS, extractTextNS;\n\nNS = fs.realpathSync(__dirname);\n\ntry {\n  extractTextNS = path.dirname(require.resolve('extract-text-webpack-plugin'));\n}\ncatch (_) {}\n\nfunction flattenPrototype(obj) {\n  if (typeof obj === 'string') {\n    return obj;\n  }\n  var copy = {};\n  for (var key in obj) {\n    copy[key] = obj[key];\n  }\n  return copy;\n}\n\nfunction serializeDependencies(deps, parent, compilation) {\n  return deps\n  .map(function(dep) {\n    var cacheDep;\n    if (typeof HarmonyImportDependency !== 'undefined') {\n      if (dep instanceof HarmonyImportDependency) {\n        cacheDep = {\n          harmonyImport: true,\n          request: dep.request,\n        };\n      }\n      else if (dep instanceof HarmonyExportImportedSpecifierDependency) {\n        cacheDep = {\n          harmonyRequest: dep.importDependency.request,\n          harmonyExportImportedSpecifier: true,\n          harmonyId: dep.id,\n          harmonyName: dep.name,\n        };\n      }\n      else if (dep instanceof HarmonyImportSpecifierDependency) {\n        cacheDep = {\n          harmonyRequest: dep.importDependency.request,\n          harmonyImportSpecifier: true,\n          harmonyId: dep.id,\n          harmonyName: dep.name,\n          loc: flattenPrototype(dep.loc),\n        };\n      }\n      else if (dep instanceof HarmonyCompatibilityDependency) {\n        cacheDep = {\n          harmonyCompatibility: true,\n        };\n      }\n    }\n    if (!cacheDep && dep.originModule && dep.describeHarmonyExport) {\n      cacheDep = {\n        harmonyExport: true,\n        harmonyId: dep.id,\n        harmonyName: dep.describeHarmonyExport().exportedName,\n        harmonyPrecedence: dep.describeHarmonyExport().precedence,\n      };\n    }\n    if (!cacheDep) {\n      cacheDep = {\n        contextDependency: dep instanceof ContextDependency,\n        contextCritical: dep.critical,\n        constDependency: (\n          dep instanceof ConstDependency ||\n          dep instanceof AMDDefineDependency\n        ),\n        request: dep.request,\n        recursive: dep.recursive,\n        regExp: dep.regExp ? dep.regExp.source : null,\n        async: dep.async,\n        optional: dep.optional,\n        loc: flattenPrototype(dep.loc),\n      };\n    }\n\n    var identifierPrefix = cachePrefix(compilation);\n    if (identifierPrefix !== null) {\n      // The identifier this dependency should resolve to.\n      var _resolvedModuleIdentifier = dep.module && dep.module.identifier();\n      // An identifier to dereference a dependency under a module to some per\n      // dependency value\n      var _inContextDependencyIdentifier = parent && JSON.stringify([parent.context, cacheDep]);\n      // An identifier from the dependency to the cached resolution information\n      // for building a module.\n      var _resolveCacheId = parent && cacheDep.request && JSON.stringify([identifierPrefix, parent.context, cacheDep.request]);\n      cacheDep._resolvedModuleIdentifier = _resolvedModuleIdentifier;\n      cacheDep._inContextDependencyIdentifier = _inContextDependencyIdentifier;\n      cacheDep._resolveCacheId = _resolveCacheId;\n    }\n\n    return cacheDep;\n  })\n  .filter(function(req) {\n    return req.request ||\n      req.constDependency ||\n      req.harmonyExport ||\n      req.harmonyImportSpecifier ||\n      req.harmonyExportImportedSpecifier ||\n      req.harmonyCompatibility;\n  });\n}\nfunction serializeVariables(vars, parent, compilation) {\n  return vars.map(function(variable) {\n    return {\n      name: variable.name,\n      expression: variable.expression,\n      dependencies: serializeDependencies(variable.dependencies, parent, compilation),\n    }\n  });\n}\nfunction serializeBlocks(blocks, parent, compilation) {\n  return blocks.map(function(block) {\n    return {\n      async: block instanceof AsyncDependenciesBlock,\n      name: block.chunkName,\n      dependencies: serializeDependencies(block.dependencies, parent, compilation),\n      variables: serializeVariables(block.variables, parent, compilation),\n      blocks: serializeBlocks(block.blocks, parent, compilation),\n    };\n  });\n}\nfunction serializeHashContent(module) {\n  var content = [];\n  module.updateHash({\n    update: function(str) {\n      content.push(str);\n    },\n  });\n  return content.join('');\n}\n\n// function AssetCache() {\n//\n// }\n//\n// function ModuleCache() {\n//   this.cache = {};\n//   this.serializer = null;\n// }\n//\n// ModuleCache.prototype.get = function(identifier) {\n//\n// };\n//\n// ModuleCache.prototype.save = function(modules) {\n//\n// };\n\nfunction HardSourceWebpackPlugin(options) {\n  this.options = options;\n}\n\nHardSourceWebpackPlugin.prototype.getPath = function(dirName, suffix) {\n  var confighashIndex = dirName.search(/\\[confighash\\]/);\n  if (confighashIndex !== -1) {\n    dirName = dirName.replace(/\\[confighash\\]/, this.configHash);\n  }\n  var cachePath = path.resolve(\n    process.cwd(), this.compilerOutputOptions.path, dirName\n  );\n  if (suffix) {\n    cachePath = path.join(cachePath, suffix);\n  }\n  return cachePath;\n};\n\nHardSourceWebpackPlugin.prototype.getCachePath = function(suffix) {\n  return this.getPath(this.options.cacheDirectory, suffix);\n};\n\nmodule.exports = HardSourceWebpackPlugin;\nHardSourceWebpackPlugin.prototype.apply = function(compiler) {\n  var options = this.options;\n  var active = true;\n  if (!options.cacheDirectory) {\n    console.error('HardSourceWebpackPlugin requires a cacheDirectory setting.');\n    active = false;\n    return;\n  }\n\n  this.compilerOutputOptions = compiler.options.output;\n  if (options.configHash) {\n    if (typeof options.configHash === 'string') {\n      this.configHash = options.configHash;\n    }\n    else if (typeof options.configHash === 'function') {\n      this.configHash = options.configHash(compiler.options);\n    }\n  }\n  var configHashInDirectory =\n    options.cacheDirectory.search(/\\[confighash\\]/) !== -1;\n  if (configHashInDirectory && !this.configHash) {\n    console.error('HardSourceWebpackPlugin cannot use [confighash] in cacheDirectory without configHash option being set and returning a non-falsy value.');\n    active = false;\n    return;\n  }\n\n  var environmentHasher = null;\n  if (typeof options.environmentPaths !== 'undefined') {\n    // TODO 0.3.0 Add deprecation message.\n    if (options.environmentPaths === false) {\n      environmentHasher = function() {\n        return Promise.resolve('');\n      };\n    }\n    else if (typeof options.environmentPaths === 'string') {\n      environmentHasher = function() {\n        return Promise.resolve(options.environmentPaths);\n      };\n    }\n    else {\n      environmentHasher = function() {\n        return envHash(options.environmentPaths);\n      };\n    }\n  }\n  if (typeof options.environmentHash !== 'undefined') {\n    if (environmentHasher) {\n      console.error('HardSourceWebpackPlugin: environmentHash is a new option replacing environmentPaths. Please use only environmentHash.');\n    }\n    if (options.environmentHash === false) {\n      environmentHasher = function() {\n        return Promise.resolve('');\n      };\n    }\n    else if (typeof options.environmentHash === 'string') {\n      environmentHasher = function() {\n        return Promise.resolve(options.environmentHash);\n      };\n    }\n    else if (typeof options.environmentHash === 'object') {\n      environmentHasher = function() {\n        return envHash(options.environmentHash);\n      };\n    }\n    else if (typeof options.environmentHash === 'function') {\n      environmentHasher = function() {\n        return Promise.resolve(options.environmentHash());\n      };\n    }\n  }\n  if (!environmentHasher) {\n    environmentHasher = envHash;\n  }\n\n  if (options.recordsInputPath || options.recordsPath) {\n    if (compiler.options.recordsInputPath || compiler.options.recordsPath) {\n      console.error('HardSourceWebpackPlugin will not set recordsInputPath when it is already set. Using current value:', compiler.options.recordsInputPath || compiler.options.recordsPath);\n    }\n    else {\n      compiler.options.recordsInputPath =\n        this.getPath(options.recordsInputPath || options.recordsPath);\n    }\n  }\n  if (options.recordsOutputPath || options.recordsPath) {\n    if (compiler.options.recordsOutputPath || compiler.options.recordsPath) {\n      console.error('HardSourceWebpackPlugin will not set recordsOutputPath when it is already set. Using current value:', compiler.options.recordsOutputPath || compiler.options.recordsPath);\n    }\n    else {\n      compiler.options.recordsOutputPath =\n        this.getPath(options.recordsOutputPath || options.recordsPath);\n    }\n  }\n\n  var cacheDirPath = this.getCachePath();\n  var cacheAssetDirPath = path.join(cacheDirPath, 'assets');\n  var resolveCachePath = path.join(cacheDirPath, 'resolve.json');\n\n  var resolveCache = {};\n  var moduleCache = {};\n  var assetCache = {};\n  var dataCache = {};\n  var md5Cache = {};\n  var currentStamp = '';\n\n  var fileMd5s = {};\n  var cachedMd5s = {};\n  var fileTimestamps = {};\n  var contextMd5s = {};\n  var contextTimestamps = {};\n\n  var assetCacheSerializer = this.assetCacheSerializer =\n    new FileSerializer({cacheDirPath: path.join(cacheDirPath, 'assets')});\n  var moduleCacheSerializer = this.moduleCacheSerializer =\n    new LevelDbSerializer({cacheDirPath: path.join(cacheDirPath, 'modules')});\n  var dataCacheSerializer = this.dataCacheSerializer =\n    new LevelDbSerializer({cacheDirPath: path.join(cacheDirPath, 'data')});\n  var md5CacheSerializer = this.md5CacheSerializer =\n    new LevelDbSerializer({cacheDirPath: path.join(cacheDirPath, 'md5')});\n  var _this = this;\n\n  var stat, readdir, mtime, md5, contextStamps;\n\n  compiler.plugin('after-plugins', function() {\n    if (\n      !compiler.recordsInputPath || !compiler.recordsOutputPath\n    ) {\n      console.error('HardSourceWebpackPlugin requires recordsPath to be set.');\n      active = false;\n    }\n  });\n\n  function bindFS() {\n    stat = Promise.promisify(\n      compiler.inputFileSystem.stat,\n      {context: compiler.inputFileSystem}\n    );\n\n    readdir = Promise.promisify(\n      compiler.inputFileSystem.readdir,\n      {context: compiler.inputFileSystem}\n    );\n\n    mtime = function(file) {\n      return stat(file)\n      .then(function(stat) {return +stat.mtime;})\n      .catch(function() {return 0;});\n    };\n\n    md5 = function(file) {\n      return Promise.resolve({\n        then: function(resolve, reject) {\n          compiler.inputFileSystem.readFile(file, function(err, contents) {\n            if (err) { return reject(err); }\n            return resolve(crypto.createHash('md5').update(contents, 'utf8').digest('hex'));\n          });\n        }\n      })\n      .catch(function() {return '';});\n    };\n\n    contextStamps = function(contextDependencies, fileDependencies) {\n      var contexts = {};\n      contextDependencies.forEach(function(context) {\n        contexts[context] = {files: [], mtime: 0, hash: ''};\n      });\n\n      fileDependencies.forEach(function(file) {\n        contextDependencies.forEach(function(context) {\n          if (file.substring(0, context.length + 1) === context + path.sep) {\n            contexts[context].files.push(file.substring(context.length + 1));\n          }\n        });\n      });\n\n      return Promise.all(contextDependencies.map(function(contextPath) {\n        var context = contexts[contextPath];\n        var selfTime = 0;\n        var selfHash = crypto.createHash('md5');\n        function walk(dir) {\n          return readdir(dir)\n          .then(function(items) {\n            return Promise.all(items.map(function(item) {\n              return stat(path.join(dir, item))\n              .then(function(stat) {\n                if (stat.isDirectory()) {\n                  return walk(path.join(dir, item))\n                  .then(function(items2) {\n                    return items2.map(function(item2) {\n                      return path.join(item, item2);\n                    });\n                  });\n                }\n                if (+stat.mtime > selfTime) {\n                  selfTime = +stat.mtime;\n                }\n                return item;\n              }, function() {\n                return;\n              });\n            }));\n          })\n          .catch(() => [])\n          .then(function(items) {\n            return items.reduce(function(carry, item) {\n              return carry.concat(item);\n            }, [])\n            .filter(Boolean);\n          });\n        }\n        return walk(contextPath)\n        .then(function(items) {\n          items.sort();\n          items.forEach(function(item) {\n            selfHash.update(item);\n          });\n          context.mtime = selfTime;\n          context.hash = selfHash.digest('hex');\n        });\n      }))\n      .then(function() {\n        return contexts;\n      });\n    };\n  }\n\n  if (compiler.inputFileSystem) {\n    bindFS();\n  }\n  else {\n    compiler.plugin('after-environment', bindFS);\n  }\n\n  compiler.plugin(['watch-run', 'run'], function(compiler, cb) {\n    if (!active) {return cb();}\n\n    try {\n      fs.statSync(cacheAssetDirPath);\n    }\n    catch (_) {\n      mkdirp.sync(cacheAssetDirPath);\n      if (configHashInDirectory) {\n        console.log('HardSourceWebpackPlugin is writing to a new confighash path for the first time:', cacheDirPath);\n      }\n    }\n    var start = Date.now();\n\n    Promise.all([\n      fsReadFile(path.join(cacheDirPath, 'stamp'), 'utf8')\n      .catch(function() {return '';}),\n\n      environmentHasher(),\n\n      fsReadFile(path.join(cacheDirPath, 'version'), 'utf8')\n      .catch(function() {return '';}),\n    ])\n    .then(function(stamps) {\n      var stamp = stamps[0];\n      var hash = stamps[1];\n      var versionStamp = stamps[2];\n\n      if (!configHashInDirectory && options.configHash) {\n        hash += '_' + _this.configHash;\n      }\n\n      currentStamp = hash;\n      if (!hash || hash !== stamp || hardSourceVersion !== versionStamp) {\n        if (hash && stamp) {\n          console.error('Environment has changed (node_modules or configuration was updated).\\nHardSourceWebpackPlugin will reset the cache and store a fresh one.');\n        }\n        else if (versionStamp && hardSourceVersion !== versionStamp) {\n          console.error('Installed HardSource version does not match the saved cache.\\nHardSourceWebpackPlugin will reset the cache and store a fresh one.');\n        }\n\n        // Reset the cache, we can't use it do to an environment change.\n        resolveCache = {};\n        moduleCache = {};\n        assetCache = {};\n        dataCache = {};\n        md5Cache = {};\n        fileTimestamps = {};\n        contextTimestamps = {};\n        return;\n      }\n\n      if (Object.keys(moduleCache).length) {return Promise.resolve();}\n\n      return Promise.all([\n        fsReadFile(resolveCachePath, 'utf8')\n        .then(JSON.parse)\n        .then(function(_resolveCache) {resolveCache = _resolveCache}),\n\n        assetCacheSerializer.read()\n        .then(function(_assetCache) {assetCache = _assetCache;}),\n\n        moduleCacheSerializer.read()\n        .then(function(_moduleCache) {moduleCache = _moduleCache;}),\n\n        dataCacheSerializer.read()\n        .then(function(_dataCache) {dataCache = _dataCache;})\n        .then(function() {\n          Object.keys(dataCache).forEach(function(key) {\n            if (typeof dataCache[key] === 'string') {\n              dataCache[key] = JSON.parse(dataCache[key]);\n            }\n          });\n        }),\n\n        md5CacheSerializer.read()\n        .then(function(_md5Cache) {md5Cache = _md5Cache;})\n        .then(function() {\n          Object.keys(md5Cache).forEach(function(key) {\n            if (typeof md5Cache[key] === 'string') {\n              md5Cache[key] = JSON.parse(md5Cache[key]);\n              // md5Cache[key].mtime = md5Cache[key].mtime;\n            }\n\n            cachedMd5s[key] = md5Cache[key].hash;\n          });\n        }),\n      ])\n      .then(function() {\n        // console.log('cache in', Date.now() - start);\n      });\n    })\n    .then(cb, cb);\n  });\n\n  compiler.plugin(['watch-run', 'run'], function(compiler, cb) {\n    if (!active) {return cb();}\n\n    if(!dataCache.fileDependencies) return cb();\n    // var fs = compiler.inputFileSystem;\n    var fileTs = compiler.fileTimestamps = fileTimestamps = {};\n\n    function setKey(store, key, _default) {\n      return function(value) {\n        store[key] = value || _default;\n      };\n    }\n\n    function setKeyError(store, key, _default) {\n      return function(err) {\n        store[key] = _default;\n\n        if (err.code === \"ENOENT\") {return;}\n        throw err;\n      };\n    }\n\n    return Promise.all(dataCache.fileDependencies.map(function(file) {\n      return stat(file)\n      .then(function(stat) {return +stat.mtime;})\n      .then(setKey(fileTs, file, 0), setKeyError(fileTs, file, 0))\n      .then(function() {\n        var setter = setKey(fileMd5s, file, '');\n        if (\n          md5Cache[file] && fileTs[file] >= md5Cache[file].mtime ||\n          !md5Cache[file] ||\n          !fileTs[file]\n        ) {\n          return md5(file)\n          .then(setter, setKeyError(fileMd5s, file, ''));\n        }\n        else {\n          setter(md5Cache[file].hash);\n        }\n      });\n    }))\n    .then(function() {\n      var contextTs = compiler.contextTimestamps = contextTimestamps = {};\n      return contextStamps(dataCache.contextDependencies, dataCache.fileDependencies)\n      .then(function(contexts) {\n        for (var contextPath in contexts) {\n          var context = contexts[contextPath];\n\n          fileTimestamps[contextPath] = context.mtime;\n          contextTimestamps[contextPath] = context.mtime;\n          fileMd5s[contextPath] = context.hash;\n        }\n      });\n    })\n    .then(function() {cb();}, cb);\n  });\n\n  compiler.plugin('after-plugins', function() {\n    compiler.plugin('compilation', function(compilation) {\n      var factories = compilation.dependencyFactories;\n      var contextFactory = factories.get(RequireContextDependency);\n\n      var hardContextFactory = new HardContextModuleFactory({\n        compilation: compilation,\n        factory: contextFactory,\n        resolveCache: resolveCache,\n        moduleCache: moduleCache,\n        fileTimestamps: fileTimestamps,\n        fileMd5s: fileMd5s,\n        cachedMd5s: cachedMd5s,\n      });\n\n      factories.set(AMDRequireContextDependency, hardContextFactory);\n      factories.set(CommonJsRequireContextDependency, hardContextFactory);\n      factories.set(RequireContextDependency, hardContextFactory);\n      factories.set(RequireResolveContextDependency, hardContextFactory);\n\n      if (ImportContextDependency) {\n        factories.set(ImportContextDependency, hardContextFactory);\n      }\n\n      factories.set(HardContextDependency, hardContextFactory);\n    });\n  });\n\n  function getModuleCacheItem(compilation, result) {\n    // a map of dependency identifiers to factory.create checks\n    var checkedDependencies =\n      compilation.__hardSource_checkedDependencies =\n      compilation.__hardSource_checkedDependencies || {};\n    // a map of module identifiers to fully checked modules\n    var checkedModules =\n      compilation.__hardSource_checkedModules =\n      compilation.__hardSource_checkedModules || {};\n\n    if (checkedModules[result.request] && !checkedModules[result.request].invalid) {\n      return checkedModules[result.request];\n    }\n\n    var identifierPrefix = cachePrefix(compilation);\n    if (identifierPrefix === null) {\n      return;\n    }\n    var identifier = identifierPrefix + result.request;\n\n    if (moduleCache[identifier] && !moduleCache[identifier].invalid) {\n      var cacheItem = moduleCache[identifier];\n\n      if (typeof cacheItem === 'string') {\n        cacheItem = JSON.parse(cacheItem);\n        moduleCache[identifier] = cacheItem;\n      }\n      if (Array.isArray(cacheItem.assets)) {\n        cacheItem.assets = (cacheItem.assets || [])\n        .reduce(function(carry, key) {\n          carry[key] = assetCache[requestHash(key)];\n          return carry;\n        }, {});\n      }\n\n      if (!HardModule.needRebuild(\n        cacheItem,\n        cacheItem.fileDependencies,\n        cacheItem.contextDependencies,\n        fileTimestamps,\n        contextTimestamps,\n        fileMd5s,\n        cachedMd5s\n      )) {\n        var promise = null;\n\n        var walkDependencyBlock = function(block, callback) {\n          var addPromise = function(item) {\n            var p = callback(item);\n            if (p && p.then) {\n              if (!promise) {promise = [];}\n              promise.push(p);\n            }\n          };\n          block.dependencies.forEach(addPromise)\n          block.variables.forEach(function(variable) {\n            variable.dependencies.forEach(addPromise);\n          })\n          block.blocks.forEach(function(block) {\n            walkDependencyBlock(block, callback);\n          })\n        };\n\n        var state = {state: {imports: {}}};\n\n        walkDependencyBlock(cacheItem, function(cacheDependency) {\n          if (\n            cacheDependency &&\n            !cacheDependency.contextDependency &&\n            typeof cacheDependency.request !== 'undefined'\n          ) {\n            var resolveId = cacheDependency._resolveCacheId;\n            var resolveItem = resolveCache[resolveId];\n            if (\n              resolveItem &&\n              // !resolveItem.invalid\n              resolveItem.request &&\n              resolveItem.resource &&\n              fileTimestamps[resolveItem.resource.split('?')[0]]\n            ) {\n              var depIdentifier = identifierPrefix + resolveItem.request;\n              var depCacheItem = moduleCache[depIdentifier];\n              if (\n                depCacheItem &&\n                depCacheItem.fileDependencies\n                .reduce(function(carry, file) {\n                  return carry && fileTimestamps[file];\n                }, true) &&\n                depCacheItem.contextDependencies\n                .reduce(function(carry, dir) {\n                  return carry && contextTimestamps[dir];\n                }, true)\n              ) {\n                return;\n              }\n              else if (depCacheItem) {\n                return;\n              }\n            }\n            // else if (resolveItem && resolveItem.invalid) {\n            //   cacheItem.invalid = true;\n            //   return;\n            // }\n          }\n\n          if (\n            cacheDependency._resolvedModuleIdentifier &&\n            cacheDependency._inContextDependencyIdentifier\n          ) {\n            var dependencyIdentifier = cacheDependency._inContextDependencyIdentifier;\n            if (!checkedDependencies[dependencyIdentifier]) {\n              var dependency = deserializeDependencies.dependencies.call(state, [cacheDependency], null)[0];\n              var factory = compilation.dependencyFactories.get(dependency.constructor);\n              var p = new Promise(function(resolve, reject) {\n                var callFactory = function(fn) {\n                  if (factory.create.length === 2) {\n                    factory.create({\n                      contextInfo: {\n                        issuer: cacheItem.resource.split('?')[0],\n                      },\n                      context: cacheItem.context,\n                      dependencies: [dependency],\n                    }, fn);\n                  }\n                  if (factory.create.length === 3) {\n                    factory.create(cacheItem.context, dependency, fn);\n                  }\n                };\n                callFactory(function(err, depModule) {\n                  if (\n                    !checkedDependencies[dependencyIdentifier] ||\n                    checkedDependencies[dependencyIdentifier].then\n                  ) {\n                    checkedDependencies[dependencyIdentifier] = cacheItem;\n                  }\n                  if (err) {\n                    cacheItem.invalid = true;\n                    return reject(err);\n                  }\n                  // IgnorePlugin and other plugins can call this callback\n                  // without an error or module.\n                  if (!depModule) {return resolve();}\n\n                  if (cacheDependency._resolvedModuleIdentifier === depModule.identifier()) {\n                    return resolve();\n                  }\n                  cacheItem.invalid = true;\n                  reject(new Error('dependency has a new identifier'));\n                });\n              });\n              if (!checkedDependencies[dependencyIdentifier]) {\n                checkedDependencies[dependencyIdentifier] = p;\n              }\n            }\n            return checkedDependencies[dependencyIdentifier];\n          }\n        });\n\n        if (promise && promise.length) {\n          return Promise.all(promise)\n          .then(function() {\n            if (!cacheItem || cacheItem.invalid) {\n              return Promise.reject();\n            }\n            checkedModules[result.request] = cacheItem;\n            return cacheItem;\n          })\n          .catch(function(e) {\n            cacheItem.invalid = true;\n            moduleCache[identifier] = null;\n            return Promise.reject();\n          });\n        }\n        else {\n          if (!cacheItem || cacheItem.invalid) {\n            if (cacheItem) {\n              cacheItem = null;\n            }\n            moduleCache[identifier] = null;\n          }\n          checkedModules[result.request] = cacheItem;\n          return cacheItem;\n        }\n      }\n    }\n  }\n\n  compiler.plugin('compilation', function(compilation, params) {\n    if (!active) {return;}\n\n    compilation.fileTimestamps = fileTimestamps;\n    compilation.contextTimestamps = contextTimestamps;\n\n    compilation.dependencyFactories.set(HardModuleDependency, params.normalModuleFactory);\n    compilation.dependencyTemplates.set(HardModuleDependency, new NullDependencyTemplate);\n\n    compilation.dependencyFactories.set(HardContextDependency, params.contextModuleFactory);\n    compilation.dependencyTemplates.set(HardContextDependency, new NullDependencyTemplate);\n\n    compilation.dependencyFactories.set(HardNullDependency, new NullFactory());\n    compilation.dependencyTemplates.set(HardNullDependency, new NullDependencyTemplate);\n\n    compilation.dependencyFactories.set(HardHarmonyExportDependency, new NullFactory());\n    compilation.dependencyTemplates.set(HardHarmonyExportDependency, new NullDependencyTemplate);\n\n    compilation.dependencyFactories.set(HardHarmonyImportDependency, params.normalModuleFactory);\n    compilation.dependencyTemplates.set(HardHarmonyImportDependency, new NullDependencyTemplate);\n\n    compilation.dependencyFactories.set(HardHarmonyImportSpecifierDependency, new NullFactory());\n    compilation.dependencyTemplates.set(HardHarmonyImportSpecifierDependency, new NullDependencyTemplate);\n\n    compilation.dependencyFactories.set(HardHarmonyCompatibilityDependency, new NullFactory());\n    compilation.dependencyTemplates.set(HardHarmonyCompatibilityDependency, new NullDependencyTemplate);\n\n    compilation.dependencyFactories.set(HardHarmonyExportImportedSpecifierDependency, new NullFactory());\n    compilation.dependencyTemplates.set(HardHarmonyExportImportedSpecifierDependency, new NullDependencyTemplate);\n\n    var needAdditionalPass;\n\n    compilation.plugin('after-seal', function(cb) {\n      needAdditionalPass = compilation.modules.reduce(function(carry, module) {\n        var identifierPrefix = cachePrefix(compilation);\n        if (identifierPrefix === null) {\n          return carry;\n        }\n        var identifier = identifierPrefix + module.identifier();\n\n        var cacheItem = moduleCache[identifier];\n        if (cacheItem && (\n          !lodash.isEqual(cacheItem.used, module.used) ||\n          !lodash.isEqual(cacheItem.usedExports, module.usedExports)\n        )) {\n          // Bust this module, the keys exported or their order has changed.\n          cacheItem.invalid = true;\n          moduleCache[identifier] = null;\n\n          // Bust all dependents, they likely need to use new keys for this\n          // module.\n          module.reasons.forEach(function(reason) {\n            var identifier = identifierPrefix + reason.module.identifier();\n            var reasonItem = moduleCache[identifier];\n            if (reasonItem) {\n              reasonItem.invalid = true;\n              moduleCache[identifier] = null;\n            }\n            if (reason.dependency.__NormalModuleFactoryCache) {\n              reason.dependency.__NormalModuleFactoryCache = null;\n              reason.module.reasons.forEach(function(reason) {\n                reason.dependency.__NormalModuleFactoryCache = null;\n              });\n            }\n          });\n          return true;\n        }\n        return carry;\n      }, false);\n\n      // Bust webpack's NormalModule unsafeCache. Best case this is done before\n      // the compilation really gets started. In the worse case it gets here and\n      // we have to tell it to build again.\n      needAdditionalPass = compilation.modules.reduce(function(carry, module) {\n        if (\n          module.isHard && module.isHard() &&\n          HardModule.needRebuild(module.cacheItem, module.fileDependencies, module.contextDependencies, fileTimestamps, contextTimestamps, fileMd5s, cachedMd5s)\n        ) {\n          module.reasons.forEach(function(reason) {\n            if (reason.dependency.__NormalModuleFactoryCache) {\n              reason.dependency.__NormalModuleFactoryCache = null;\n            }\n          });\n          return true;\n        }\n        return carry;\n      }, needAdditionalPass);\n\n      cb();\n    });\n\n    compilation.plugin('need-additional-pass', function() {\n      if (needAdditionalPass) {\n        needAdditionalPass = false;\n        return true;\n      }\n    });\n\n    // Webpack 2 can use different parsers based on config rule sets.\n    params.normalModuleFactory.plugin('parser', function(parser, options) {\n      // Store the options somewhere that can not conflict with another plugin\n      // on the parser so we can look it up and store those options with a\n      // cached module resolution.\n      parser[NS + '/parser-options'] = options;\n    });\n\n    params.normalModuleFactory.plugin('resolver', function(fn) {\n      return function(request, cb) {\n        var identifierPrefix = cachePrefix(compilation);\n        if (identifierPrefix === null) {return fn.call(null, request, cb);}\n\n        var cacheId = JSON.stringify([identifierPrefix, request.context, request.request]);\n\n        var next = function() {\n          var originalRequest = request;\n          return fn.call(null, request, function(err, request) {\n            if (err) {\n              return cb(err);\n            }\n            if (!request.source) {\n              resolveCache[cacheId] = Object.assign({}, request, {\n                parser: null,\n                parserOptions: request.parser[NS + '/parser-options'],\n                dependencies: null,\n              });\n            }\n            cb.apply(null, arguments);\n          });\n        };\n\n        var fromCache = function() {\n          var result = Object.assign({}, resolveCache[cacheId]);\n          result.dependencies = request.dependencies;\n          result.parser = compilation.compiler.parser;\n          if (!result.parser || !result.parser.parse) {\n            result.parser = params.normalModuleFactory.getParser(result.parserOptions);\n          }\n          return cb(null, result);\n        };\n\n        if (resolveCache[cacheId]) {\n          var resource = resolveCache[cacheId].resource.split('?')[0];\n          if (fileTimestamps[resource]) {\n            return fromCache();\n          }\n          return stat(resource)\n          .then(fromCache, next);\n        }\n\n        next();\n      };\n    });\n\n    params.normalModuleFactory.plugin('resolver', function(fn) {\n      return function(request, cb) {\n        fn.call(null, request, function(err, result) {\n          if (err) {return cb(err);}\n          // IgnorePlugin and other plugins can call this callback without an\n          // error or module.\n          if (!result) {return cb();}\n\n          var p = getModuleCacheItem(compilation, result);\n          if (p && p.then) {\n            return p\n            .then(function(cacheItem) {\n              var module = new HardModule(cacheItem);\n              cb(null, module);\n            })\n            .catch(function() {\n              cb(err, result);\n            });\n          }\n          else if (p) {\n            var module = new HardModule(p);\n            return cb(null, module);\n          }\n          cb(err, result);\n        });\n      };\n    });\n\n    params.normalModuleFactory.plugin('module', function(module) {\n      // module.isUsed = function(exportName) {\n      //   return exportName ? exportName : false;\n      // };\n      return module;\n    });\n  });\n\n  function preload(prefix, memoryCache) {\n    Object.keys(moduleCache)\n    .map(function(key) {\n      if (key.indexOf(prefix) !== 0) {return;}\n      var cacheItem = moduleCache[key];\n      if (!cacheItem) {return;}\n      if (typeof cacheItem === 'string') {\n        cacheItem = JSON.parse(cacheItem);\n        moduleCache[key] = cacheItem;\n      }\n      if (\n        cacheItem &&\n        cacheItem.fileDependencies &&\n        !HardModule.needRebuild(cacheItem, cacheItem.fileDependencies, cacheItem.contextDependencies, fileTimestamps, contextTimestamps, fileMd5s, cachedMd5s)\n      ) {\n        var memCacheId = 'm' + cacheItem.identifier;\n        if (!memoryCache[memCacheId]) {\n          if (Array.isArray(cacheItem.assets)) {\n            cacheItem.assets = (cacheItem.assets || [])\n            .reduce(function(carry, key) {\n              carry[key] = assetCache[requestHash(key)];\n              return carry;\n            }, {});\n          }\n          var module = memoryCache[memCacheId] = new HardModule(cacheItem);\n          module.build(null, null, null, null, function() {});\n          return module;\n        }\n      }\n      else if (\n        cacheItem &&\n        !cacheItem.fileDependencies &&\n        !HardContextModule.needRebuild(cacheItem, fileTimestamps, contextTimestamps, fileMd5s, cachedMd5s)\n      ) {\n        var memCacheId = 'm' + cacheItem.identifier;\n        if (!memoryCache[memCacheId]) {\n          var module = memoryCache[memCacheId] = new HardContextModule(cacheItem);\n          module.build(null, null, null, null, function() {});\n          return module;\n        }\n      }\n    })\n    .filter(Boolean)\n    .forEach(function(module) {\n      var origin = memoryCache['m' + module.cacheItem.issuer];\n      module.issuer = origin;\n\n      module.errors.forEach(function(err) {\n        err.origin = origin;\n      }, this);\n      module.warnings.forEach(function(err) {\n        err.origin = origin;\n      }, this);\n    });\n  }\n\n  var preloadCacheByPrefix = {};\n\n  compiler.plugin('compilation', function(compilation, params) {\n    var preloadMemoryCache = false;\n    params.normalModuleFactory.plugin('before-resolve', function(data, cb) {\n      if (preloadMemoryCache) {return cb(null, data);}\n      preloadMemoryCache = true;\n      if (compilation.cache) {\n        var prefix = cachePrefix(compilation);\n        if (prefix === null) {return cb(null, data);}\n        if (preloadCacheByPrefix[prefix]) {return cb(null, data);}\n        preloadCacheByPrefix[prefix] = true;\n\n        preload(prefix, compilation.cache);\n      }\n      return cb(null, data);\n    });\n  });\n\n  compiler.plugin('make', function(compilation, cb) {\n    if (compilation.cache) {\n      var prefix = cachePrefix(compilation);\n      if (prefix !== null && !preloadCacheByPrefix[prefix]) {\n        preloadCacheByPrefix[prefix] = true;\n\n        preload(prefix, compilation.cache);\n      }\n\n      // Bust dependencies to HardModules in webpack 2's NormalModule\n      // unsafeCache to avoid an additional pass that would bust them.\n      Object.keys(compilation.cache).forEach(function(key) {\n        var module = compilation.cache[key];\n        if (module && module.isHard && module.isHard()) {\n          if (HardModule.needRebuild(module.cacheItem, module.fileDependencies, module.contextDependencies, fileTimestamps, contextTimestamps, fileMd5s, cachedMd5s)) {\n            module.reasons.forEach(function(reason) {\n              if (reason.dependency.__NormalModuleFactoryCache) {\n                reason.dependency.__NormalModuleFactoryCache = null;\n              }\n            });\n          }\n        }\n      });\n    }\n    return cb();\n  });\n\n  compiler.plugin('this-compilation', function(compilation) {\n    compiler.__hardSource_topCompilation = compilation;\n  });\n\n  compiler.plugin('after-compile', function(compilation, cb) {\n    if (!active) {return cb();}\n\n    var startCacheTime = Date.now();\n\n    var devtoolOptions = makeDevtoolOptions(compiler.options);\n\n    // fs.writeFileSync(\n    //   path.join(cacheDirPath, 'file-dependencies.json'),\n    //   JSON.stringify({fileDependencies: compilation.fileDependencies}),\n    //   'utf8'\n    // );\n\n    var moduleOps = [];\n    var dataOps = [];\n    var md5Ops = [];\n    var assetOps = [];\n\n    var buildingMd5s = {};\n\n    if (compiler.__hardSource_topCompilation === compilation) {\n      // var fileDependenciesDiff = lodash.difference(compilation.fileDependencies, dataCache.fileDependencies || []);\n\n      function buildMd5Ops(dependencies) {\n        dependencies.forEach(function(file) {\n          buildingMd5s[file] = buildingMd5s[file]\n          .then(function(value) {\n            if (\n              !md5Cache[file] ||\n              (!value.mtime && md5Cache[file] && md5Cache[file].mtime !== value.mtime) ||\n              (md5Cache[file] && md5Cache[file].hash !== value.hash)\n            ) {\n              md5Cache[file] = value;\n              cachedMd5s[file] = value.hash;\n\n              md5Ops.push({\n                key: file,\n                value: JSON.stringify(value),\n              });\n            }\n          });\n        });\n      }\n\n      if (!lodash.isEqual(compilation.fileDependencies, dataCache.fileDependencies)) {\n        lodash.difference(dataCache.fileDependencies, compilation.fileDependencies).forEach(function(file) {\n          buildingMd5s[file] = Promise.resolve({\n            mtime: 0,\n            hash: '',\n          });\n        });\n\n        dataCache.fileDependencies = compilation.fileDependencies;\n\n        dataOps.push({\n          key: 'fileDependencies',\n          value: JSON.stringify(dataCache.fileDependencies),\n        });\n      }\n\n      dataCache.fileDependencies.forEach(function(file) {\n        if (buildingMd5s[file]) {return;}\n\n        function getValue(store, key, fn) {\n          if (store[key]) {\n            return store[key];\n          }\n          else {\n            return fn(key);\n          }\n        }\n\n        buildingMd5s[file] = Promise.props({\n          mtime: getValue(fileTimestamps, file, mtime),\n          hash: getValue(fileMd5s, file, md5),\n        });\n      });\n\n      buildMd5Ops(dataCache.fileDependencies);\n\n      if (!lodash.isEqual(compilation.contextDependencies, dataCache.contextDependencies)) {\n        lodash.difference(dataCache.contextDependencies, compilation.contextDependencies).forEach(function(file) {\n          buildingMd5s[file] = Promise.resolve({\n            mtime: 0,\n            hash: '',\n          });\n        });\n\n        dataCache.contextDependencies = compilation.contextDependencies;\n\n        dataOps.push({\n          key: 'contextDependencies',\n          value: JSON.stringify(dataCache.contextDependencies),\n        });\n      }\n\n      var contexts = Promise.all(\n        Object.keys(buildingMd5s).map(function(key) {return buildingMd5s[key];})\n      )\n      .then(function() {\n        return contextStamps(dataCache.contextDependencies, dataCache.fileDependencies);\n      });\n      dataCache.contextDependencies.forEach(function(file) {\n        if (buildingMd5s[file]) {return;}\n\n        buildingMd5s[file] = contexts\n        .then(function(contexts) {\n          return Promise.props({\n            mtime: contexts[file].mtime,\n            hash: contexts[file].hash,\n          });\n        });\n      });\n\n      buildMd5Ops(dataCache.contextDependencies);\n    }\n\n    // moduleCache.fileDependencies = compilation.fileDependencies;\n    // moduleOps.push({\n    //   type: 'put',\n    //   key: 'fileDependencies',\n    //   // value: JSON.stringify(compilation.fileDependencies),\n    //   value: moduleCache.fileDependencies,\n    // });\n\n    // mkdirp.sync(cacheAssetDirPath);\n\n    function walkCompilations(compilation, fn) {\n      fn(compilation);\n      compilation.children.forEach(function(compilation) {\n        walkCompilations(compilation, fn);\n      });\n    }\n\n    function serializeError(error, parent) {\n      var serialized = {\n        message: error.message,\n      };\n      if (error.origin) {\n        serialized.origin = serializeDependencies([error.origin], parent, compilation)[0];\n      }\n      if (error.dependencies) {\n        serialized.dependencies = serializeDependencies(error.dependencies, parent, compilation);\n      }\n      return serialized;\n    }\n\n    compilation.modules.forEach(function(module) {\n      var identifierPrefix = cachePrefix(compilation);\n      if (identifierPrefix === null) {\n        return;\n      }\n      var identifier = identifierPrefix + module.identifier();\n      var existingCacheItem = moduleCache[identifier];\n\n      if (\n        module.request &&\n        module.cacheable &&\n        !(module instanceof HardModule) &&\n        (module instanceof NormalModule) &&\n        (\n          existingCacheItem &&\n          module.buildTimestamp > existingCacheItem.buildTimestamp ||\n          !existingCacheItem\n        )\n      ) {\n        var source = module.source(\n          compilation.dependencyTemplates,\n          compilation.moduleTemplate.outputOptions,\n          compilation.moduleTemplate.requestShortener\n        );\n        var assets = Object.keys(module.assets || {}).map(function(key) {\n          return {\n            key: requestHash(key),\n            value: module.assets[key].source(),\n          };\n        });\n        moduleCache[identifier] = {\n          moduleId: module.id,\n          context: module.context,\n          request: module.request,\n          userRequest: module.userRequest,\n          rawRequest: module.rawRequest,\n          resource: module.resource,\n          loaders: module.loaders,\n          identifier: module.identifier(),\n          // libIdent: module.libIdent &&\n          // module.libIdent({context: compiler.options.context}),\n          assets: Object.keys(module.assets || {}),\n          buildTimestamp: module.buildTimestamp,\n          strict: module.strict,\n          meta: module.meta,\n          used: module.used,\n          usedExports: module.usedExports,\n          // HarmonyDetectionParserPlugin\n          exportsArgument: module.exportsArgument,\n          issuer:\n            typeof module.issuer === 'string' ? module.issuer :\n            module.issuer && typeof module.issuer === 'object' ? module.issuer.identifier() :\n            null,\n\n          rawSource: module._source ? module._source.source() : null,\n          source: source.source(),\n          map: devtoolOptions && source.map(devtoolOptions),\n          // Some plugins (e.g. UglifyJs) set useSourceMap on a module. If that\n          // option is set we should always store some source map info and\n          // separating it from the normal devtool options may be necessary.\n          baseMap: module.useSourceMap && source.map(),\n          hashContent: serializeHashContent(module),\n\n          dependencies: serializeDependencies(module.dependencies, module, compilation),\n          variables: serializeVariables(module.variables, module, compilation),\n          blocks: serializeBlocks(module.blocks, module, compilation),\n\n          fileDependencies: module.fileDependencies,\n          contextDependencies: module.contextDependencies,\n\n          errors: module.errors.map(serializeError),\n          warnings: module.warnings.map(serializeError),\n        };\n\n        // Custom plugin handling for common plugins.\n        // This will be moved in a pluginified HardSourcePlugin.\n        //\n        // Ignore the modules that kick off child compilers in extract text.\n        // These modules must always be built so the child compilers run so\n        // that assets get built.\n        if (\n          module[extractTextNS] ||\n          module.meta && module.meta[extractTextNS]\n        ) {\n          moduleCache[identifier] = null;\n          return;\n        }\n\n        moduleOps.push({\n          key: identifier,\n          value: JSON.stringify(moduleCache[identifier]),\n        });\n\n        // module.fileDependencies.forEach(function(file) {\n        //   buildMd5s.push(file);\n        // });\n        //\n        // module.contextDependencies.forEach(function(context) {\n        //   buildContextMd5s.push(file);\n        // });\n\n        if (assets.length) {\n          assetOps = assetOps.concat(assets);\n        }\n      }\n\n      if (\n        module.context &&\n        module.cacheable &&\n        !(module instanceof HardContextModule) &&\n        (module instanceof ContextModule) &&\n        (\n          existingCacheItem &&\n          module.builtTime >= existingCacheItem.builtTime ||\n          !existingCacheItem\n        )\n      ) {\n        var source = module.source(\n          compilation.dependencyTemplates,\n          compilation.moduleTemplate.outputOptions,\n          compilation.moduleTemplate.requestShortener\n        );\n        var assets = Object.keys(module.assets || {}).map(function(key) {\n          return {\n            key: requestHash(key),\n            value: module.assets[key].source(),\n          };\n        });\n        moduleCache[identifier] = {\n          moduleId: module.id,\n          context: module.context,\n          recursive: module.recursive,\n          regExp: module.regExp ? module.regExp.source : null,\n          async: module.async,\n          addons: module.addons,\n          identifier: module.identifier(),\n          builtTime: module.builtTime,\n\n          used: module.used,\n          usedExports: module.usedExports,\n\n          source: source.source(),\n          map: devtoolOptions && source.map(devtoolOptions),\n          // Some plugins (e.g. UglifyJs) set useSourceMap on a module. If that\n          // option is set we should always store some source map info and\n          // separating it from the normal devtool options may be necessary.\n          baseMap: module.useSourceMap && source.map(),\n          hashContent: serializeHashContent(module),\n\n          dependencies: serializeDependencies(module.dependencies, module, compilation),\n          variables: serializeVariables(module.variables, module, compilation),\n          blocks: serializeBlocks(module.blocks, module, compilation),\n        };\n\n        moduleOps.push({\n          key: identifier,\n          value: JSON.stringify(moduleCache[identifier]),\n        });\n      }\n    });\n\n    var writeMd5Ops = Promise.all(Object.keys(buildingMd5s).map(function(key) {\n      return buildingMd5s[key];\n    }))\n    .then(function() {\n      return md5CacheSerializer.write(md5Ops);\n    });\n\n    Promise.all([\n      fsWriteFile(path.join(cacheDirPath, 'stamp'), currentStamp, 'utf8'),\n      fsWriteFile(path.join(cacheDirPath, 'version'), hardSourceVersion, 'utf8'),\n      fsWriteFile(resolveCachePath, JSON.stringify(resolveCache), 'utf8'),\n      assetCacheSerializer.write(assetOps),\n      moduleCacheSerializer.write(moduleOps),\n      dataCacheSerializer.write(dataOps),\n      writeMd5Ops,\n    ])\n    .then(function() {\n      // console.log('cache out', Date.now() - startCacheTime);\n      cb();\n    }, cb);\n  });\n\n  // Ensure records are stored inbetween runs of memory-fs using\n  // webpack-dev-middleware.\n  compiler.plugin('done', function() {\n    if (!active) {return;}\n\n    fs.writeFileSync(\n      path.resolve(compiler.options.context, compiler.recordsOutputPath),\n      JSON.stringify(compiler.records, null, 2),\n      'utf8'\n    );\n  });\n};\n","/home/travis/build/npmtest/node-npmtest-hard-source-webpack-plugin/node_modules/hard-source-webpack-plugin/lib/env-hash.js":"// - scan dirs\n//   - stat items\n//   - hash files\n//   - stat dir items under\n//     - hash files\n// - hash files\n\nvar crypto = require('crypto');\nvar fs = require('fs');\nvar path = require('path');\n\nvar Promise = require('bluebird');\n\nvar readFile = Promise.promisify(fs.readFile);\nvar readdir = Promise.promisify(fs.readdir);\nvar stat = Promise.promisify(fs.stat);\n\nfunction hashFile(file) {\n  return readFile(file)\n  .then(function(src) {\n    return [file, crypto.createHash('md5').update(src).digest('hex')];\n  })\n  .catch(function() {});\n}\n\nfunction hashObject(obj) {\n  var hash = crypto.createHash('md5');\n  obj.forEach(function(item) {\n    hash.update(item[0]);\n    hash.update(item[1]);\n  });\n  return hash.digest('hex');\n}\n\nfunction hashFiles(root, files) {\n  return Promise.all(files.map(function(file) {\n    return hashFile(path.join(root, file));\n  }))\n  .then(function(hashes) {return hashes.filter(Boolean);});\n}\n\nfunction flatten(items) {\n  return (items || []).reduce(function(carry, item) {\n    return item ? carry.concat(item) : carry;\n  }, []);\n}\n\nmodule.exports = function(options) {\n  options = options || {};\n  var root = options.root || process.cwd();\n  var files = options.files || ['package.json'];\n  var directories = options.directories || ['node_modules'];\n\n  return Promise.all([\n    hashFiles(root, files),\n    Promise.all(directories.map(function(dir) {\n      return readdir(path.join(root, dir))\n      .then(function(items) {\n        return Promise.all(items.map(function(item) {\n          return stat(path.join(root, dir, item))\n          .then(function(stat) {\n            if (stat.isDirectory()) {\n              return hashFiles(path.join(root, dir, item), files);\n            }\n            if (stat.isFile()) {\n              return hashFile(path.join(root, dir, item))\n              .then(function(hash) {return hash ? [hash] : hash;});\n            }\n          })\n          .catch(function() {console.error(arguments)});\n        }))\n        .then(function(hashes) {return hashes.filter(Boolean);});\n      })\n      .catch(function() {})\n      .then(flatten);\n    }))\n    .then(flatten),\n  ])\n  .then(flatten)\n  .then(function(items) {\n    items.forEach(function(item) {\n      item[0] = path.relative(root, item[0]);\n    });\n    // console.log(items);\n    items.sort(function(a, b) {\n      if (a[0] < b[0]) {\n        return -1;\n      }\n      else if (a[0] > b[0]) {\n        return 1;\n      }\n      return 0;\n    });\n    return hashObject(items);\n  });\n};\n","/home/travis/build/npmtest/node-npmtest-hard-source-webpack-plugin/node_modules/hard-source-webpack-plugin/lib/dependencies.js":"var ContextDependency = require('webpack/lib/dependencies/ContextDependency');\nvar ModuleDependency = require('webpack/lib/dependencies/ModuleDependency');\nvar NullDependency = require('webpack/lib/dependencies/NullDependency');\n\nvar CriticalDependencyWarning;\ntry {\n  CriticalDependencyWarning = require(\"webpack/lib/dependencies/CriticalDependencyWarning\");\n}\ncatch (_) {}\n\nvar HarmonyModulesHelpers, HarmonyImportSpecifierDependency, HarmonyExportImportedSpecifierDependency, HarmonyCompatibilityDependency;\ntry {\n  HarmonyModulesHelpers = require(\"webpack/lib/dependencies/HarmonyModulesHelpers\");\n  HarmonyImportSpecifierDependency = require('webpack/lib/dependencies/HarmonyImportSpecifierDependency');\n  HarmonyExportImportedSpecifierDependency = require('webpack/lib/dependencies/HarmonyExportImportedSpecifierDependency');\n  try {\n    HarmonyCompatibilityDependency = require('webpack/lib/dependencies/HarmonyCompatibilityDependency');\n  }\n  catch (_) {\n    HarmonyCompatibilityDependency = require('webpack/lib/dependencies/HarmonyCompatiblilityDependency');\n  }\n}\ncatch (_) {}\n\nmodule.exports = {\n  HardModuleDependency: HardModuleDependency,\n  HardContextDependency: HardContextDependency,\n  HardNullDependency: HardNullDependency,\n  HardHarmonyExportDependency: HardHarmonyExportDependency,\n  HardHarmonyImportDependency: HardHarmonyImportDependency,\n  HardHarmonyImportSpecifierDependency: HardHarmonyImportSpecifierDependency,\n  HardHarmonyExportImportedSpecifierDependency: HardHarmonyExportImportedSpecifierDependency,\n  HardHarmonyCompatibilityDependency: HardHarmonyCompatibilityDependency,\n};\n\nfunction HardModuleDependency(request) {\n  Object.setPrototypeOf(this,\n    Object.setPrototypeOf(\n      new ModuleDependency(request),\n      HardModuleDependency.prototype\n    )\n  );\n}\nObject.setPrototypeOf(HardModuleDependency.prototype, ModuleDependency.prototype);\nObject.setPrototypeOf(HardModuleDependency, ModuleDependency);\n\nfunction HardContextDependency(request, recursive, regExp) {\n  Object.setPrototypeOf(this,\n    Object.setPrototypeOf(\n      new ContextDependency(request, recursive, regExp),\n      HardContextDependency.prototype\n    )\n  );\n}\nObject.setPrototypeOf(HardContextDependency.prototype, ContextDependency.prototype);\nObject.setPrototypeOf(HardContextDependency, ContextDependency);\n\nif (CriticalDependencyWarning) {\n  HardContextDependency.prototype.getWarnings = function() {\n    if(this.critical) {\n      return [\n        new CriticalDependencyWarning(this.critical)\n      ];\n    }\n  };\n}\n\nfunction HardNullDependency() {\n  Object.setPrototypeOf(this,\n    Object.setPrototypeOf(\n      new NullDependency(),\n      HardNullDependency.prototype\n    )\n  );\n}\nObject.setPrototypeOf(HardNullDependency.prototype, NullDependency.prototype);\nObject.setPrototypeOf(HardNullDependency, NullDependency);\n\nfunction HardModuleDependencyTemplate() {\n}\nHardModuleDependencyTemplate.prototype.apply = function() {};\nHardModuleDependencyTemplate.prototype.applyAsTemplateArgument = function() {};\n\nfunction HardHarmonyExportDependency(originModule, id, name, precedence) {\n  Object.setPrototypeOf(this,\n    Object.setPrototypeOf(\n      new NullDependency(),\n      HardHarmonyExportDependency.prototype\n    )\n  );\n  this.originModule = originModule;\n  this.id = id;\n  this.name = name;\n  this.precedence = precedence;\n}\nObject.setPrototypeOf(HardHarmonyExportDependency.prototype, NullDependency.prototype);\nObject.setPrototypeOf(HardHarmonyExportDependency, NullDependency);\n\nHardHarmonyExportDependency.prototype.getExports = function() {\n  return {\n    exports: [this.name],\n  }\n};\n\nHardHarmonyExportDependency.prototype.describeHarmonyExport = function() {\n  return {\n    exportedName: this.name,\n    precedence: this.precedence,\n  }\n};\n\nfunction HardHarmonyImportDependency(request) {\n  Object.setPrototypeOf(this,\n    Object.setPrototypeOf(\n      new ModuleDependency(request),\n      HardHarmonyImportDependency.prototype\n    )\n  );\n}\nObject.setPrototypeOf(HardHarmonyImportDependency.prototype, ModuleDependency.prototype);\nObject.setPrototypeOf(HardHarmonyImportDependency, ModuleDependency);\nHardHarmonyImportDependency.prototype.getReference = function() {\n  if(!this.module) return null;\n  return {\n    module: this.module,\n    importedNames: false\n  };\n};\n\nfunction HardHarmonyImportSpecifierDependency(importDependency, id, name) {\n  Object.setPrototypeOf(this,\n    Object.setPrototypeOf(\n      new HarmonyImportSpecifierDependency(importDependency, null, id, name, null),\n      HardHarmonyImportSpecifierDependency.prototype\n    )\n  );\n}\n\nif (typeof HarmonyImportSpecifierDependency !== 'undefined') {\n  Object.setPrototypeOf(HardHarmonyImportSpecifierDependency.prototype, HarmonyImportSpecifierDependency.prototype);\n  Object.setPrototypeOf(HardHarmonyImportSpecifierDependency, HarmonyImportSpecifierDependency);\n}\n\nfunction HardHarmonyExportImportedSpecifierDependency(originModule, importDependency, id, name) {\n  Object.setPrototypeOf(this,\n    Object.setPrototypeOf(\n      new HarmonyExportImportedSpecifierDependency(originModule, importDependency, null, id, name, null),\n      HardHarmonyExportImportedSpecifierDependency.prototype\n    )\n  );\n}\n\nif (typeof HarmonyExportImportedSpecifierDependency !== 'undefined') {\n  Object.setPrototypeOf(HardHarmonyExportImportedSpecifierDependency.prototype, HarmonyExportImportedSpecifierDependency.prototype);\n  Object.setPrototypeOf(HardHarmonyExportImportedSpecifierDependency, HarmonyExportImportedSpecifierDependency);\n}\n\nfunction HardHarmonyCompatibilityDependency(originModule) {\n  Object.setPrototypeOf(this,\n    Object.setPrototypeOf(\n      new HarmonyCompatibilityDependency(originModule),\n      HardHarmonyCompatibilityDependency.prototype\n    )\n  );\n}\n\nif (typeof HarmonyCompatibilityDependency !== 'undefined') {\n  Object.setPrototypeOf(HardHarmonyCompatibilityDependency.prototype, HarmonyCompatibilityDependency.prototype);\n  Object.setPrototypeOf(HardHarmonyCompatibilityDependency, HarmonyCompatibilityDependency);\n}\n","/home/travis/build/npmtest/node-npmtest-hard-source-webpack-plugin/node_modules/hard-source-webpack-plugin/lib/cache-serializers.js":"var fs = require('fs');\nvar path = require('path');\n\nvar level = require('level');\n\nvar Promise = require('bluebird');\n\nvar fsReadFile = Promise.promisify(fs.readFile, {context: fs});\nvar fsReaddir = Promise.promisify(fs.readdir, {context: fs});\nvar fsStat = Promise.promisify(fs.stat, {context: fs});\nvar fsWriteFile = Promise.promisify(fs.writeFile, {context: fs});\n\nexports.FileSerializer = FileSerializer;\nexports.LevelDbSerializer = LevelDbSerializer;\n\nfunction FileSerializer(options) {\n  this.path = options.cacheDirPath;\n}\n\nFileSerializer.prototype.read = function() {\n  var assets = {};\n  var cacheAssetDirPath = this.path;\n  return Promise.all(fs.readdirSync(cacheAssetDirPath).map(function(name) {\n    return fsReadFile(path.join(cacheAssetDirPath, name))\n    .then(function(asset) {\n      assets[name] = asset;\n    });\n  }))\n  .then(function() {return assets;});\n};\n\nFileSerializer.prototype.write = function(assetOps) {\n  var cacheAssetDirPath = this.path;\n  return Promise.all(assetOps.map(function(asset) {\n    var assetPath = path.join(cacheAssetDirPath, asset.key);\n    return fsWriteFile(assetPath, asset.value);\n  }));\n};\n\nfunction LevelDbSerializer(options) {\n  this.path = options.cacheDirPath;\n  this.leveldbLock = Promise.resolve();\n}\n\nLevelDbSerializer.prototype.read = function() {\n  var start = Date.now();\n  var moduleCache = {};\n  return Promise.promisify(level)(this.path)\n  .then(function(db) {\n    return new Promise(function(resolve, reject) {\n      var dbClose = Promise.promisify(db.close, {context: db});\n      db.createReadStream()\n      .on('data', function(data) {\n        var value = data.value;\n        if (!moduleCache[data.key]) {\n          moduleCache[data.key] = value;\n        }\n      })\n      .on('end', function() {\n        dbClose().then(resolve, reject);\n      });\n    });\n  })\n  .then(function() {\n    return moduleCache;\n  });\n};\n\nLevelDbSerializer.prototype.write = function(moduleOps) {\n  var ops = moduleOps;\n\n  if (ops.length === 0) {\n    return;\n  }\n\n  for (var i = 0; i < ops.length; i++) {\n    ops.type = 'put';\n  }\n\n  var cachePath = this.path;\n\n  return this.leveldbLock = this.leveldbLock\n  .then(function() {\n    return Promise.promisify(level)(cachePath);\n  })\n  .then(function(db) {\n    return Promise.promisify(db.batch, {context: db})(ops)\n    .then(function() {return db;});\n  })\n  .then(function(db) {\n    return Promise.promisify(db.close, {context: db})();\n  });\n};\n","/home/travis/build/npmtest/node-npmtest-hard-source-webpack-plugin/node_modules/hard-source-webpack-plugin/lib/hard-context-module.js":"var DependenciesBlockVariable = require('webpack/lib/DependenciesBlockVariable');\nvar RawModule = require('webpack/lib/RawModule');\nvar ContextModule = require('webpack/lib/ContextModule');\n\nvar HardSource = require('./hard-source');\nvar deserializeDependencies = require('./deserialize-dependencies');\n\nmodule.exports = HardContextModule;\n\nfunction HardContextModule(cacheItem) {\n  Object.setPrototypeOf(this,\n    Object.setPrototypeOf(\n      new ContextModule(cacheItem.source, cacheItem.identifier, cacheItem.context),\n      HardContextModule.prototype\n    )\n  );\n  this.cacheItem = cacheItem;\n  this.context = cacheItem.context;\n  this.recursive = cacheItem.recursive;\n  this.regExp = cacheItem.regExp ? new RegExp(cacheItem.regExp) : cacheItem.regExp;\n  this.addon = cacheItem.addon;\n  this.async = cacheItem.async;\n  this.cacheable = true;\n  this.contextDependencies = [cacheItem.context];\n  this.built = false;\n}\n\nObject.setPrototypeOf(HardContextModule.prototype, ContextModule.prototype);\nObject.setPrototypeOf(HardContextModule, ContextModule);\n\nHardContextModule.prototype.isHard = function() {return true;};\n\nHardContextModule.needRebuild = function(cacheItem, fileTimestamps, contextTimestamps, fileMd5s, cachedMd5s) {\n  var needMd5Rebuild = !(fileMd5s && cachedMd5s);\n  if (!needMd5Rebuild) {\n    needMd5Rebuild = cachedMd5s[cacheItem.context] !== fileMd5s[cacheItem.context] || !cachedMd5s[cacheItem.context];\n  }\n  var ts = contextTimestamps[cacheItem.context];\n  if(!ts) ts = Infinity;\n  if (needMd5Rebuild && fileMd5s && cachedMd5s) {\n    cacheItem.invalid = true;\n  }\n  return cacheItem.invalid || ts >= cacheItem.builtTime && needMd5Rebuild || needMd5Rebuild && fileMd5s && cachedMd5s;\n};\n\nHardContextModule.prototype.needRebuild = function(fileTimestamps, contextTimestamps) {\n  return this.cacheItem.invalid || HardContextModule.needRebuild(this.cacheItem, fileTimestamps, contextTimestamps);\n};\n\nfunction prettyRegExp(str) {\n  return str.substring(1, str.length - 1);\n}\n\nHardContextModule.prototype.readableIdentifier = function(requestShortener) {\n  var identifier = \"\";\n  identifier += requestShortener.shorten(this.context) + \" \";\n  if(this.async)\n    identifier += \"async \";\n  if(!this.recursive)\n    identifier += \"nonrecursive \";\n  if(this.addon)\n    identifier += requestShortener.shorten(this.addon);\n  if(this.regExp)\n    identifier += prettyRegExp(this.regExp + \"\");\n  return identifier.replace(/ $/, \"\");\n};\n\nHardContextModule.prototype.build = function(options, compilation, resolver, fs, callback) {\n  this.builtTime = this.cacheItem.builtTime;\n  var cacheItem = this.cacheItem;\n  var state = {state: {imports: {}}};\n  this.dependencies = deserializeDependencies.dependencies.call(state, cacheItem.dependencies, this);\n  this.variables = deserializeDependencies.variables.call(state, cacheItem.variables, this);\n  deserializeDependencies.blocks.call(state, cacheItem.blocks, this);\n  // this.warnings = cacheItem.warnings.map(deserializeError(ModuleWarning, state), this);\n  // this.errors = cacheItem.errors.map(deserializeError(ModuleError, state), this);\n\n  this._renderedSource = new HardSource(cacheItem);\n\n  callback();\n};\n\nHardContextModule.prototype.source = function() {\n  return this._renderedSource;\n};\n\nHardContextModule.prototype.updateHash = function(hash) {\n  hash.update(this.cacheItem.hashContent);\n};\n","/home/travis/build/npmtest/node-npmtest-hard-source-webpack-plugin/node_modules/hard-source-webpack-plugin/lib/hard-source.js":"var RawModule = require('webpack/lib/RawModule');\n\nvar RawSource = require('webpack-sources').RawSource;\n\nvar SourceNode = require('source-map').SourceNode;\nvar SourceMapConsumer = require('source-map').SourceMapConsumer;\n\nvar fromStringWithSourceMap = require('source-list-map').fromStringWithSourceMap;\n\nmodule.exports = HardSource;\n\nfunction HardSource(cacheItem) {\n  RawSource.call(this, cacheItem.source);\n  this.cacheItem = cacheItem;\n}\nHardSource.prototype = Object.create(RawSource.prototype);\nHardSource.prototype.constructor = HardSource;\n\nfunction chooseMap(options, cacheItem) {\n  if (options && Object.keys(options).length) {\n    return cacheItem.map;\n  }\n  else {\n    return cacheItem.baseMap;\n  }\n}\n\nHardSource.prototype.map = function(options) {\n  return chooseMap(options, this.cacheItem);\n};\n\n// We need a function to help rehydrate source keys, webpack 1 uses source-map\n// 0.4 which needs an appended $. webpack 2 uses source-map 0.5 which may append\n// $. Either way setSourceContent will provide the needed behaviour. This is\n// pretty round about and ugly but this is less prone to failure than trying to\n// determine whether we're in webpack 1 or 2 and if they are using webpack-core\n// or webpack-sources and the version of source-map in that.\nvar SourceNode_setSourceContent = new RawModule('')\n.source().node().setSourceContent;\n\nHardSource.prototype.node = function(options) {\n  var node = SourceNode.fromStringWithSourceMap(\n    this.cacheItem.source,\n    new SourceMapConsumer(chooseMap(options, this.cacheItem))\n  );\n  var sources = Object.keys(node.sourceContents);\n  for (var i = 0; i < sources.length; i++) {\n    var key = sources[i];\n    var content = node.sourceContents[key];\n    delete node.sourceContents[key];\n    SourceNode_setSourceContent.call(node, key, content);\n  }\n  return node;\n};\n\nHardSource.prototype.listMap = function(options) {\n  return fromStringWithSourceMap(\n    this.cacheItem.source,\n    chooseMap(options, this.cacheItem)\n  );\n};\n","/home/travis/build/npmtest/node-npmtest-hard-source-webpack-plugin/node_modules/hard-source-webpack-plugin/lib/deserialize-dependencies.js":"var AsyncDependenciesBlock = require('webpack/lib/AsyncDependenciesBlock');\nvar DependenciesBlockVariable = require('webpack/lib/DependenciesBlockVariable');\n\nvar HardModuleDependency = require('./dependencies').HardModuleDependency;\nvar HardContextDependency = require('./dependencies').HardContextDependency;\nvar HardNullDependency = require('./dependencies').HardNullDependency;\nvar HardHarmonyExportDependency = require('./dependencies').HardHarmonyExportDependency;\nvar HardHarmonyImportDependency =\nrequire('./dependencies').HardHarmonyImportDependency;\nvar HardHarmonyImportSpecifierDependency =\nrequire('./dependencies').HardHarmonyImportSpecifierDependency;\nvar HardHarmonyExportImportedSpecifierDependency = require('./dependencies').HardHarmonyExportImportedSpecifierDependency;\nvar HardHarmonyCompatibilityDependency = require('./dependencies').HardHarmonyCompatibilityDependency;\n\nexports.dependencies = deserializeDependencies;\nexports.variables = deserializeVariables;\nexports.blocks = deserializeBlocks;\n\nfunction deserializeDependencies(deps, parent) {\n  return deps.map(function(req) {\n    if (req.contextDependency) {\n      var dep = new HardContextDependency(req.request, req.recursive, req.regExp ? new RegExp(req.regExp) : null);\n      dep.critical = req.contextCritical;\n      dep.async = req.async;\n      dep.loc = req.loc;\n      if (req.optional) {\n        dep.optional = true;\n      }\n      return dep;\n    }\n    if (req.constDependency) {\n      return new HardNullDependency();\n    }\n    if (req.harmonyExport) {\n      return new HardHarmonyExportDependency(parent, req.harmonyId, req.harmonyName, req.harmonyPrecedence);\n    }\n    if (req.harmonyImport) {\n      if (this.state.imports[req.request]) {\n        return this.state.imports[req.request];\n      }\n      return this.state.imports[req.request] = new HardHarmonyImportDependency(req.request);\n    }\n    if (req.harmonyImportSpecifier) {\n      if (!this.state.imports[req.harmonyRequest]) {\n        this.state.imports[req.harmonyRequest] = new HardHarmonyImportDependency(req.harmonyRequest);\n      }\n      var dep = new HardHarmonyImportSpecifierDependency(this.state.imports[req.harmonyRequest], req.harmonyId, req.harmonyName);\n      dep.loc = req.loc;\n      return dep;\n    }\n    if (req.harmonyExportImportedSpecifier) {\n      if (!this.state.imports[req.harmonyRequest]) {\n        this.state.imports[req.harmonyRequest] = new HardHarmonyImportDependency(req.harmonyRequest);\n      }\n      return new HardHarmonyExportImportedSpecifierDependency(parent, this.state.imports[req.harmonyRequest], req.harmonyId, req.harmonyName);\n    }\n    if (req.harmonyCompatibility) {\n      return new HardHarmonyCompatibilityDependency(parent);\n    }\n    var dep = new HardModuleDependency(req.request);\n    dep.loc = req.loc;\n    if (req.optional) {\n      dep.optional = true;\n    }\n    return dep;\n  }, this);\n}\nfunction deserializeVariables(vars, parent) {\n  return vars.map(function(req) {\n    return new DependenciesBlockVariable(req.name, req.expression, deserializeDependencies.call(this, req.dependencies, parent));\n  }, this);\n}\nfunction deserializeBlocks(blocks, parent) {\n  blocks.map(function(req) {\n    if (req.async) {\n      var block = new AsyncDependenciesBlock(req.name, parent);\n      block.dependencies = deserializeDependencies.call(this, req.dependencies, parent);\n      block.variables = deserializeVariables.call(this, req.variables, parent);\n      deserializeBlocks(req.blocks, block);\n      return block;\n    }\n  }, this)\n  .filter(Boolean)\n  .forEach(function(block) {\n    parent.addBlock(block);\n  });\n}\n","/home/travis/build/npmtest/node-npmtest-hard-source-webpack-plugin/node_modules/hard-source-webpack-plugin/lib/hard-context-module-factory.js":"var cachePrefix = require('./util').cachePrefix;\nvar HardContextModule = require('./hard-context-module');\n\nmodule.exports = HardContextModuleFactory;\n\nfunction HardContextModuleFactory(options) {\n  this.compilation = options.compilation;\n  this.factory = options.factory;\n  this.resolveCache = options.resolveCache;\n  this.moduleCache = options.moduleCache;\n  this.fileTimestamps = options.fileTimestamps;\n  this.fileMd5s = options.fileMd5s;\n  this.cachedMd5s = options.cachedMd5s;\n}\n\nHardContextModuleFactory.prototype.create = function(context, dependency, callback) {\n  var compilation = this.compilation;\n  var factory = this.factory;\n  var resolveCache = this.resolveCache;\n  var moduleCache = this.moduleCache;\n  var fileTimestamps = this.fileTimestamps;\n  var contextTimestamps = this.fileTimestamps;\n  var fileMd5s = this.fileMd5s;\n  var cachedMd5s = this.cachedMd5s;\n\n  // Webpack 2 Factory API\n  var data;\n  if (!callback) {\n    data = context;\n    callback = dependency;\n    dependency = context.dependencies[0];\n    context = context.context;\n  }\n\n  var resolveIdentifier = JSON.stringify({\n    context: context,\n    request: dependency.request,\n    recursive: dependency.recursive,\n    regExp: dependency.regExp ? dependency.regExp.source : null,\n    async: dependency.async,\n  });\n  if (resolveCache[resolveIdentifier]) {\n    var cacheItem = moduleCache[resolveCache[resolveIdentifier].identifier];\n    if (cacheItem) {\n      if (!HardContextModule.needRebuild(\n        cacheItem,\n        fileTimestamps,\n        contextTimestamps,\n        fileMd5s,\n        cachedMd5s\n      )) {\n        return callback(null, new HardContextModule(cacheItem));\n      }\n    }\n  }\n\n  var next = function(fn) {\n    if (data) {\n      factory.create(data, fn);\n    }\n    else {\n      factory.create(context, dependency, fn);\n    }\n  };\n\n  next(function(error, module) {\n    if (error) {\n      return callback(error);\n    }\n    // IgnorePlugin and other plugins can call this callback without an error or\n    // module.\n    if (!module) {\n      return callback();\n    }\n\n    var identifierPrefix = cachePrefix(compilation);\n    if (identifierPrefix === null) {\n      return callback(error, module);\n    }\n    var identifier = identifierPrefix + module.identifier();\n    resolveCache[resolveIdentifier] = {\n      identifier: identifier,\n      resource: module.context,\n    };\n\n    module.needRebuild = function(fileTimestamps, contextTimestamps) {\n      return HardContextModule.needRebuild({context: this.context, builtTime: this.builtTime}, fileTimestamps, contextTimestamps, fileMd5s, cachedMd5s);\n    };\n\n    callback(error, module);\n  });\n};\n","/home/travis/build/npmtest/node-npmtest-hard-source-webpack-plugin/node_modules/hard-source-webpack-plugin/lib/util.js":"var fs = require('fs');\nvar path = require('path');\n\nexports.cachePrefix = cachePrefix;\n\nvar NS = fs.realpathSync(path.dirname(__dirname));\n\nvar cachePrefixNS = NS + '/cachePrefix';\nvar cachePrefixErrorOnce = true;\n\nfunction cachePrefix(compilation) {\n  if (typeof compilation[cachePrefixNS] === 'undefined') {\n    var prefix = '';\n    var nextCompilation = compilation;\n\n    while (nextCompilation.compiler.parentCompilation) {\n      var parentCompilation = nextCompilation.compiler.parentCompilation;\n      if (!nextCompilation.cache) {\n        if (cachePrefixErrorOnce) {\n          cachePrefixErrorOnce = false;\n          console.error([\n            'A child compiler (' + compilation.compiler.name + ') does not',\n            'have a memory cache. Enable a memory cache with webpack\\'s',\n            '`cache` configuration option. HardSourceWebpackPlugin will be',\n            'disabled for this child compiler until then.',\n          ].join('\\n'));\n        }\n        prefix = null;\n        break;\n      }\n\n      var cache = nextCompilation.cache;\n      var parentCache = parentCompilation.cache;\n\n      if (cache === parentCache) {\n        nextCompilation = parentCompilation;\n        continue;\n      }\n\n      var cacheKey;\n      for (var key in parentCache) {\n        if (key && parentCache[key] === cache) {\n          cacheKey = key;\n          break;\n        }\n      }\n\n      if (!cacheKey) {\n        if (cachePrefixErrorOnce) {\n          cachePrefixErrorOnce = false;\n          console.error([\n            'A child compiler (' + compilation.compiler.name + ') has a',\n            'memory cache but its cache name is unknown.',\n            'HardSourceWebpackPlugin will be disabled for this child',\n            'compiler.',\n          ].join('\\n'));\n        }\n        prefix = null;\n        break;\n      }\n      else {\n        prefix = cacheKey + prefix;\n      }\n\n      nextCompilation = parentCompilation;\n    }\n\n    compilation[cachePrefixNS] = prefix;\n  }\n\n  return compilation[cachePrefixNS];\n}\n","/home/travis/build/npmtest/node-npmtest-hard-source-webpack-plugin/node_modules/hard-source-webpack-plugin/lib/hard-module.js":"var path = require('path');\n\nvar AsyncDependenciesBlock = require('webpack/lib/AsyncDependenciesBlock');\nvar DependenciesBlockVariable = require('webpack/lib/DependenciesBlockVariable');\nvar RawModule = require('webpack/lib/RawModule');\n\nvar ModuleError = require('webpack-core/lib/ModuleError');\nvar ModuleWarning = require('webpack-core/lib/ModuleWarning');\n\nvar RawSource = require('webpack-sources').RawSource;\n\nvar deserializeDependencies = require('./deserialize-dependencies');\nvar HardSource = require('./hard-source');\n\nmodule.exports = HardModule;\n\nfunction HardModule(cacheItem) {\n  Object.setPrototypeOf(this,\n    Object.setPrototypeOf(\n      new RawModule(cacheItem.source, cacheItem.identifier, cacheItem.userRequest),\n      HardModule.prototype\n    )\n  );\n\n  this.cacheItem = cacheItem;\n\n  this.request = cacheItem.request;\n  this.userRequest = cacheItem.userRequest;\n  this.rawRequest = cacheItem.rawRequest;\n  this.resource = cacheItem.resource;\n  this.context = cacheItem.context;\n  this.loaders = cacheItem.loaders;\n\n  this.strict = cacheItem.strict;\n  this.exportsArgument = cacheItem.exportsArgument;\n  this.meta = cacheItem.meta;\n  this.buildTimestamp = cacheItem.buildTimestamp;\n  this.fileDependencies = cacheItem.fileDependencies;\n  this.contextDependencies = cacheItem.contextDependencies;\n}\nObject.setPrototypeOf(HardModule.prototype, RawModule.prototype);\nObject.setPrototypeOf(HardModule, RawModule);\n\nHardModule.prototype.isHard = function() {return true;};\n\nfunction needRebuild(cacheItem, fileDependencies, contextDependencies, fileTimestamps, contextTimestamps, fileMd5s, cachedMd5s) {\n  var timestamp = 0;\n  var buildTimestamp = cacheItem.buildTimestamp;\n  var needsMd5Rebuild = !(fileMd5s && cachedMd5s);\n\n  if (fileDependencies) {\n    fileDependencies.forEach(function(file) {\n      if (!needsMd5Rebuild) {\n        needsMd5Rebuild = cachedMd5s[file] !== fileMd5s[file] || !cachedMd5s[file];\n      }\n      var ts = fileTimestamps[file];\n      if(!ts) timestamp = Infinity;\n      if(ts > timestamp) timestamp = ts;\n    });\n  }\n  if (contextDependencies) {\n    contextDependencies.forEach(function(context) {\n      if (!needsMd5Rebuild) {\n        needsMd5Rebuild = cachedMd5s[context] !== fileMd5s[context] || !cachedMd5s[context];\n      }\n      var ts = contextTimestamps[context];\n      if(!ts) timestamp = Infinity;\n      if(ts > timestamp) timestamp = ts;\n    });\n  }\n  if (needsMd5Rebuild && fileMd5s && cachedMd5s) {\n    cacheItem.invalid = true;\n  }\n  return (\n    cacheItem.invalid ||\n    timestamp >= buildTimestamp && needsMd5Rebuild ||\n    needsMd5Rebuild && fileMd5s && cachedMd5s\n  );\n}\n\nHardModule.needRebuild = needRebuild;\nHardModule.prototype.needRebuild = function(fileTimestamps, contextTimestamps) {\n  return this.cacheItem.invalid || needRebuild(this.cacheItem, this.fileDependencies, this.contextDependencies, fileTimestamps, contextTimestamps);\n};\n\nHardModule.prototype.source = function() {\n  return this._renderedSource;\n};\n\nHardModule.prototype.updateHash = function(hash) {\n  hash.update(this.cacheItem.hashContent);\n};\n\n// HardModule.prototype.libIdent = function(options) {\n//   return this.cacheItem.libIdent;\n// };\n\n// From webpack/lib/NormalModule.js\nfunction contextify(options, request) {\n  return request.split(\"!\").map(function(r) {\n    var rp = path.relative(options.context, r);\n    if(path.sep === \"\\\\\")\n      rp = rp.replace(/\\\\/g, \"/\");\n    if(rp.indexOf(\"../\") !== 0)\n      rp = \"./\" + rp;\n    return rp;\n  }).join(\"!\");\n}\n\nHardModule.prototype.libIdent = function(options) {\n  return contextify(options, this.userRequest);\n};\n\n// HardModule.prototype.isUsed = function(exportName) {\n//   return exportName ? exportName : false;\n// };\n\nfunction deserializeError(ErrorClass, state) {\n  return function(serialized) {\n    var err = new ErrorClass(this, serialized.message);\n    if (serialized.origin) {\n      err.origin = deserializeDependencies.dependencies.call(state, [serialized.origin], this)[0];\n    }\n    if (serialized.dependencies) {\n      err.dependencies = deserializeDependencies.dependencies.call(state, serialized.dependencies, this);\n    }\n    return err;\n  };\n}\n\nHardModule.prototype.build = function build(options, compilation, resolver, fs, callback) {\n  // Non-rendered source used by Stats.\n  if (this.cacheItem.rawSource) {\n    this._source = new RawSource(this.cacheItem.rawSource);\n  }\n  // Rendered source used in built output.\n  this._renderedSource = new HardSource(this.cacheItem);\n\n  var state = {state: {imports: {}}};\n  this.dependencies = deserializeDependencies.dependencies.call(state, this.cacheItem.dependencies, this);\n  this.variables = deserializeDependencies.variables.call(state, this.cacheItem.variables, this);\n  this.warnings = this.cacheItem.warnings.map(deserializeError(ModuleWarning, state), this);\n  this.errors = this.cacheItem.errors.map(deserializeError(ModuleError, state), this);\n  deserializeDependencies.blocks.call(state, this.cacheItem.blocks, this);\n\n  var cacheItem = this.cacheItem;\n  this.assets = Object.keys(cacheItem.assets).reduce(function(carry, key) {\n    var source = cacheItem.assets[key];\n    if (source.type === 'Buffer') {\n      source = new Buffer(source);\n    }\n    carry[key] = new RawSource(source);\n    return carry;\n  }, {});\n\n  callback();\n};\n","/home/travis/build/npmtest/node-npmtest-hard-source-webpack-plugin/node_modules/hard-source-webpack-plugin/lib/devtool-options.js":"module.exports = function(options) {\n  var devtool = options.devtool;\n  if(devtool && (devtool.indexOf(\"sourcemap\") >= 0 || devtool.indexOf(\"source-map\") >= 0)) {\n    var hidden = devtool.indexOf(\"hidden\") >= 0;\n    var inline = devtool.indexOf(\"inline\") >= 0;\n    var evalWrapped = devtool.indexOf(\"eval\") >= 0;\n    var cheap = devtool.indexOf(\"cheap\") >= 0;\n    var moduleMaps = devtool.indexOf(\"module\") >= 0;\n    var noSources = devtool.indexOf(\"nosources\") >= 0;\n    var legacy = devtool.indexOf(\"@\") >= 0;\n    var modern = devtool.indexOf(\"#\") >= 0;\n    var comment = legacy && modern ? \"\\n/*\\n//@ sourceMappingURL=[url]\\n//# sourceMappingURL=[url]\\n*/\" :\n      legacy ? \"\\n/*\\n//@ sourceMappingURL=[url]\\n*/\" :\n      modern ? \"\\n//# sourceMappingURL=[url]\" :\n      null;\n    return {\n      filename: inline ? null : options.output.sourceMapFilename,\n      moduleFilenameTemplate: options.output.devtoolModuleFilenameTemplate,\n      fallbackModuleFilenameTemplate: options.output.devtoolFallbackModuleFilenameTemplate,\n      append: hidden ? false : comment,\n      module: moduleMaps ? true : cheap ? false : true,\n      columns: cheap ? false : true,\n      lineToLine: options.output.devtoolLineToLine,\n      noSources: noSources,\n    };\n  }\n};\n"}